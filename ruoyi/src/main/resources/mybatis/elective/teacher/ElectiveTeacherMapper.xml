<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.project.elective.teacher.mapper.ElectiveTeacherMapper">

    <resultMap type="ElectiveTeacher" id="ElectiveTeacherResult">
        <result property="id" column="id"/>
        <result property="createBy" column="create_by"/>
        <result property="createTime" column="create_time"/>
        <result property="updateBy" column="update_by"/>
        <result property="updateTime" column="update_time"/>
        <result property="remark" column="remark"/>
        <result property="userId" column="user_id"/>
        <result property="userName" column="user_name"/>
        <result property="name" column="name"/>
        <result property="email" column="email"/>
        <result property="phonenumber" column="phonenumber"/>
        <result property="sex" column="sex"/>
        <result property="avatar" column="avatar"/>
        <result property="intro" column="intro"/>
        <result property="specialty" column="specialty"/>
        <result property="subject" column="subject"/>
    </resultMap>

    <sql id="selectElectiveTeacherVo">
        select
            a.id,
            a.create_by,
            a.create_time,
            a.update_by,
            a.update_time,
            a.user_id,
            a.name,
            a.avatar,
            a.intro,
            a.specialty,
            a.subject,
            u.remark,
            u.user_name,
            u.nick_name,
            u.email,
            u.phonenumber,
            u.sex
        from elective_teacher a
            inner join sys_user u on u.user_id = a.user_id
    </sql>

    <select id="selectElectiveTeacherList" parameterType="ElectiveTeacher" resultMap="ElectiveTeacherResult">
        <include refid="selectElectiveTeacherVo"/>
        <where>
            u.dept_id = #{schoolId}
            <if test="userName != null and userName != ''">and u.user_name like concat('%', #{userName}, '%')</if>
            <if test="name != null and name != ''">and a.name like concat('%', #{name}, '%')</if>
            <if test="phonenumber != null and phonenumber != ''">and u.phonenumber like concat('%', #{phonenumber}, '%')</if>
            <if test="sex != null and sex != ''">and u.sex = #{sex}</if>
            <if test="loginTeacherId != null">and a.id = #{loginTeacherId}</if>
            <if test="subject != null and subject != ''">and a.subject like concat('%', #{subject}, '%')</if>
        </where>
    </select>

    <select id="selectElectiveTeacherById" parameterType="Long" resultMap="ElectiveTeacherResult">
        <include refid="selectElectiveTeacherVo"/>
        where a.id = #{id}
    </select>

    <select id="selectTeacherByUserId" resultMap="ElectiveTeacherResult">
        <include refid="selectElectiveTeacherVo"/>
        where a.user_id = #{userId}
    </select>

    <insert id="insertElectiveTeacher" parameterType="ElectiveTeacher" useGeneratedKeys="true" keyProperty="id">
        insert into elective_teacher
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="createBy != null  and createBy != ''">create_by,</if>
            <if test="createTime != null ">create_time,</if>
            <if test="updateBy != null  and updateBy != ''">update_by,</if>
            <if test="updateTime != null ">update_time,</if>
            <if test="userId != null ">user_id,</if>
            <if test="name != null and name != ''">name,</if>
            <if test="avatar != null and avatar != ''">avatar,</if>
            <if test="specialty != null and specialty != ''">specialty,</if>
            <if test="intro != null and intro != ''">intro,</if>
            <if test="subject != null and subject != ''">subject,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="createBy != null  and createBy != ''">#{createBy},</if>
            <if test="createTime != null ">#{createTime},</if>
            <if test="updateBy != null  and updateBy != ''">#{updateBy},</if>
            <if test="updateTime != null ">#{updateTime},</if>
            <if test="userId != null ">#{userId},</if>
            <if test="name != null and name != '' ">#{name},</if>
            <if test="avatar != null and avatar != '' ">#{avatar},</if>
            <if test="specialty != null and specialty != '' ">#{specialty},</if>
            <if test="intro != null and intro != '' ">#{intro},</if>
            <if test="subject != null and subject != '' ">#{subject},</if>
        </trim>
    </insert>

    <update id="updateElectiveTeacher" parameterType="ElectiveTeacher">
        update elective_teacher
        <trim prefix="SET" suffixOverrides=",">
            <if test="updateBy != null  and updateBy != ''">update_by = #{updateBy},</if>
            <if test="updateTime != null ">update_time = #{updateTime},</if>
            <if test="name != null and name != '' ">name = #{name},</if>
            <if test="avatar != null and avatar != '' ">avatar = #{avatar},</if>
            <if test="specialty != null and specialty != '' ">specialty = #{specialty},</if>
            <if test="intro != null and intro != '' ">intro = #{intro},</if>
            <if test="subject != null and subject != '' ">subject = #{subject},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteElectiveTeacherById" parameterType="Long">
        delete from elective_teacher
        where id = #{id}
    </delete>

    <delete id="deleteElectiveTeacherByIds" parameterType="String">
        delete from elective_teacher where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

</mapper>