<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.project.elective.record.mapper.ElectiveCheckRecordMapper">

    <resultMap type="ElectiveCheckRecord" id="ElectiveCheckRecordResult">
        <result property="id" column="id"/>
        <result property="createBy" column="create_by"/>
        <result property="createTime" column="create_time"/>
        <result property="updateBy" column="update_by"/>
        <result property="updateTime" column="update_time"/>
        <result property="courseId" column="course_id"/>
        <result property="applyId" column="apply_id"/>
        <result property="result" column="result"/>
        <result property="courseName" column="course_name"/>
        <result property="teacherName" column="teacher_name"/>
    </resultMap>

    <sql id="selectElectiveCheckRecordVo">
        select
            a.id,
            a.create_by,
            a.create_time,
            a.update_by,
            a.update_time,
            a.course_id,
            a.apply_id,
            a.result,
            (select name
             from elective_teacher t, elective_apply_record ar
             where ar.id = a.id and t.id = ar.teacher_id) as teacher_name,
            c.name as course_name
        from elective_check_record a
            left join elective_course c on c.id = a.course_id
    </sql>

    <select id="selectElectiveCheckRecordList" parameterType="ElectiveCheckRecord"
            resultMap="ElectiveCheckRecordResult">
        <include refid="selectElectiveCheckRecordVo"/>
        <where>
            c.school_id = #{schoolId}
            <if test="courseName != null and courseName != ''">and c.name like concat('%', #{courseName}, '%')</if>
            <if test="courseId != null ">and a.course_id = #{courseId}</if>
            <if test="applyId != null ">and a.apply_id = #{applyId}</if>
            <if test="result != null  and result != ''">and a.result = #{result}</if>
        </where>
    </select>

    <select id="selectElectiveCheckRecordById" parameterType="Long" resultMap="ElectiveCheckRecordResult">
        <include refid="selectElectiveCheckRecordVo"/>
        where a.id = #{id}
    </select>

    <insert id="insertElectiveCheckRecord" parameterType="ElectiveCheckRecord" useGeneratedKeys="true" keyProperty="id">
        insert into elective_check_record
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="createBy != null  and createBy != ''">create_by,</if>
            <if test="createTime != null ">create_time,</if>
            <if test="updateBy != null  and updateBy != ''">update_by,</if>
            <if test="updateTime != null ">update_time,</if>
            <if test="courseId != null ">course_id,</if>
            <if test="applyId != null ">apply_id,</if>
            <if test="result != null and result != ''">result,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="createBy != null  and createBy != ''">#{createBy},</if>
            <if test="createTime != null ">#{createTime},</if>
            <if test="updateBy != null  and updateBy != ''">#{updateBy},</if>
            <if test="updateTime != null ">#{updateTime},</if>
            <if test="courseId != null ">#{courseId},</if>
            <if test="applyId != null ">#{applyId},</if>
            <if test="result != null  and result != ''">#{result},</if>
        </trim>
    </insert>

    <update id="updateElectiveCheckRecord" parameterType="ElectiveCheckRecord">
        update elective_check_record
        <trim prefix="SET" suffixOverrides=",">
            <if test="updateBy != null  and updateBy != ''">update_by = #{updateBy},</if>
            <if test="updateTime != null ">update_time = #{updateTime},</if>
            <if test="result != null  and result != ''">result = #{result},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteElectiveCheckRecordById" parameterType="Long">
        delete from elective_check_record
        where id = #{id}
    </delete>

    <delete id="deleteElectiveCheckRecordByIds" parameterType="String">
        delete from elective_check_record where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

</mapper>