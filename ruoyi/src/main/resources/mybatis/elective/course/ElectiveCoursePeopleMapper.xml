<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.project.elective.course.mapper.ElectiveCoursePeopleMapper">

    <resultMap type="ElectiveCoursePeople" id="ElectiveCoursePeopleResult">
        <result property="id" column="id"/>
        <result property="courseId" column="course_id"/>
        <result property="gradeId" column="grade_id"/>
        <result property="selectNum" column="select_num"/>
        <result property="initNum" column="init_num"/>
        <result property="courseName" column="course_name"/>
        <result property="gradeName" column="grade_name"/>
        <result property="teacherName" column="teacher_name"/>
    </resultMap>

    <sql id="selectElectiveCoursePeopleVo">
        select
            a.id,
            a.course_id,
            a.grade_id,
            (select count(1)
             from elective_select_record sr
             where
                 sr.course_id = a.course_id and sr.student_id in (select id
                                                                from elective_student s
                                                                where s.dept_id in (select d.dept_id
                                                                                    from sys_dept d
                                                                                    where d.parent_id =
                                                                                          a.grade_id))) as select_num,
            init_num
        from elective_course_people a
    </sql>

    <select id="selectElectiveCoursePeopleList" parameterType="ElectiveCoursePeople"
            resultMap="ElectiveCoursePeopleResult">
        <include refid="selectElectiveCoursePeopleVo"/>
        <where>
            <if test="courseId != null ">and course_id = #{courseId}</if>
            <if test="gradeId != null ">and grade_id = #{gradeId}</if>
        </where>
    </select>

    <select id="selectElectiveCoursePeopleById" parameterType="Long" resultMap="ElectiveCoursePeopleResult">
        <include refid="selectElectiveCoursePeopleVo"/>
        where id = #{id}
    </select>

    <select id="listStatistic" parameterType="ElectiveCoursePeople" resultMap="ElectiveCoursePeopleResult">
        select
        a.id,
        a.course_id,
        a.grade_id,
        (select count(1) from elective_select_record sr where
        sr.course_id = a.course_id and sr.student_id in (select id
        from elective_student s
        where s.dept_id in (select d.dept_id
        from sys_dept d
        where d.parent_id =
        a.grade_id))) as select_num,
        a.init_num,
        c.name as course_name,
        d.dept_name as grade_name,
        (select t.name
        from elective_teacher t
        where t.id = c.teacher_id) as teacher_name
        from elective_course_people a
        inner join elective_course c on c.id = a.course_id 
        left join sys_dept d on d.dept_id = a.grade_id
        <where>
            c.school_id = #{schoolId}
            <!-- 被退回的课程不显示在统计 -->
            and c.status = '1'
            <if test="semesterId != null">
                and c.semester_id = #{semesterId}
            </if>
            <if test="gradeId != null">
                and a.grade_id = #{gradeId}
            </if>
            <if test="loginTeacherId != null">
                and c.teacher_id = #{loginTeacherId}
            </if>
            <if test="courseId != null">
                and a.course_id = #{courseId}
            </if>
        </where>
    </select>

    <insert id="insertElectiveCoursePeople" parameterType="ElectiveCoursePeople" useGeneratedKeys="true"
            keyProperty="id">
        insert into elective_course_people
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="courseId != null ">course_id,</if>
            <if test="gradeId != null ">grade_id,</if>
            <if test="selectNum != null ">select_num,</if>
            <if test="initNum != null ">init_num,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="courseId != null ">#{courseId},</if>
            <if test="gradeId != null ">#{gradeId},</if>
            <if test="selectNum != null ">#{selectNum},</if>
            <if test="initNum != null ">#{initNum},</if>
        </trim>
    </insert>

    <update id="updateElectiveCoursePeople" parameterType="ElectiveCoursePeople">
        update elective_course_people
        <trim prefix="SET" suffixOverrides=",">
            <if test="courseId != null ">course_id = #{courseId},</if>
            <if test="gradeId != null ">grade_id = #{gradeId},</if>
            <if test="initNum != null ">init_num = #{initNum},</if>
        </trim>
        where id = #{id}
    </update>

    <update id="addOneSelectNum" parameterType="ElectiveSelectRecord">
        update elective_course_people
        set select_num = select_num + 1
        where course_id = #{courseId}
              and grade_id = (select parent_id
                              from sys_dept d
                                  inner join elective_student s on s.dept_id = d.dept_id
                              where s.id = #{studentId})
    </update>

    <update id="minusOneSelectNum" parameterType="ElectiveSelectRecord">
        update elective_course_people
        set select_num = select_num - 1
        where course_id = #{courseId}
              and grade_id = (select parent_id
                              from sys_dept d
                                  inner join elective_student s on s.dept_id = d.dept_id
                              where s.id = #{studentId})
    </update>

    <delete id="deleteElectiveCoursePeopleById" parameterType="Long">
        delete from elective_course_people
        where id = #{id}
    </delete>

    <delete id="deleteElectiveCoursePeopleByIds" parameterType="String">
        delete from elective_course_people where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

</mapper>
