<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.project.elective.open.mapper.ElectiveOpenSelectMapper">

    <resultMap type="ElectiveOpenSelect" id="ElectiveOpenSelectResult">
        <result property="id" column="id"/>
        <result property="createBy" column="create_by"/>
        <result property="createTime" column="create_time"/>
        <result property="updateBy" column="update_by"/>
        <result property="updateTime" column="update_time"/>
        <result property="remark" column="remark"/>
        <result property="name" column="name"/>
        <result property="semesterId" column="semester_id"/>
        <result property="semester" column="semester"/>
        <result property="openTime" column="open_time"/>
        <result property="closeTime" column="close_time"/>
        <result property="status" column="status"/>
    </resultMap>

    <sql id="selectElectiveOpenSelectVo">
        select
            id,
            create_by,
            create_time,
            update_by,
            update_time,
            remark,
            name,
            semester_id,
            open_time,
            close_time,
            status,
            (select label
             from elective_config_value c
             where c.id = semester_id
             limit 1) as semester
        from elective_open_select
    </sql>

    <select id="selectElectiveOpenSelectList" parameterType="ElectiveOpenSelect" resultMap="ElectiveOpenSelectResult">
        <include refid="selectElectiveOpenSelectVo"/>
        <where>
            1 = 1
            <if test="name != null  and name != ''">and name like concat('%', #{name}, '%')</if>
            <if test="semesterId != null ">and semester_id = #{semesterId}</if>
            <if test="status != null and status != ''">and status = #{status}</if>
        </where>
    </select>

    <select id="selectForUse" parameterType="ElectiveOpenSelect" resultMap="ElectiveOpenSelectResult">
        select
            id,
            semester_id,
            name
        from elective_open_select
        where status = '1'
              and open_time &lt; current_date()
              and close_time &gt; current_date()
        order by id desc
        limit 1
    </select>

    <select id="selectStudentOpen" parameterType="ElectiveOpenSelect" resultMap="ElectiveOpenSelectResult">
        <include refid="selectElectiveOpenSelectVo"/>
        where status = '1'
        and open_time &lt; current_date()
        and close_time &gt; current_date()
        order by id desc
    </select>

    <select id="selectElectiveOpenSelectById" parameterType="Long" resultMap="ElectiveOpenSelectResult">
        <include refid="selectElectiveOpenSelectVo"/>
        where id = #{id}
    </select>

    <insert id="insertElectiveOpenSelect" parameterType="ElectiveOpenSelect" useGeneratedKeys="true" keyProperty="id">
        insert into elective_open_select
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="createBy != null  and createBy != ''">create_by,</if>
            <if test="createTime != null ">create_time,</if>
            <if test="updateBy != null  and updateBy != ''">update_by,</if>
            <if test="updateTime != null ">update_time,</if>
            <if test="remark != null  and remark != ''">remark,</if>
            <if test="name != null  and name != ''">name,</if>
            <if test="semesterId != null ">semester_id,</if>
            <if test="openTime != null ">open_time,</if>
            <if test="closeTime != null ">close_time,</if>
            <if test="status != null and status != ''">status,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="createBy != null  and createBy != ''">#{createBy},</if>
            <if test="createTime != null ">#{createTime},</if>
            <if test="updateBy != null  and updateBy != ''">#{updateBy},</if>
            <if test="updateTime != null ">#{updateTime},</if>
            <if test="remark != null  and remark != ''">#{remark},</if>
            <if test="name != null  and name != ''">#{name},</if>
            <if test="semesterId != null ">#{semesterId},</if>
            <if test="openTime != null ">#{openTime},</if>
            <if test="closeTime != null ">#{closeTime},</if>
            <if test="status != null and status != ''">#{status},</if>
        </trim>
    </insert>

    <update id="updateElectiveOpenSelect" parameterType="ElectiveOpenSelect">
        update elective_open_select
        <trim prefix="SET" suffixOverrides=",">
            <if test="createBy != null  and createBy != ''">create_by = #{createBy},</if>
            <if test="createTime != null ">create_time = #{createTime},</if>
            <if test="updateBy != null  and updateBy != ''">update_by = #{updateBy},</if>
            <if test="updateTime != null ">update_time = #{updateTime},</if>
            <if test="remark != null  and remark != ''">remark = #{remark},</if>
            <if test="name != null  and name != ''">name = #{name},</if>
            <if test="semesterId != null ">semester_id = #{semesterId},</if>
            <if test="openTime != null ">open_time = #{openTime},</if>
            <if test="closeTime != null ">close_time = #{closeTime},</if>
            <if test="status != null and status != ''">status = #{status},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteElectiveOpenSelectById" parameterType="Long">
        delete from elective_open_select
        where id = #{id}
    </delete>

    <delete id="deleteElectiveOpenSelectByIds" parameterType="String">
        delete from elective_open_select where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

</mapper>